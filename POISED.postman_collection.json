{
	"info": {
		"_postman_id": "b95901b8-f77c-47a9-bd82-ec89dd9ece38",
		"name": "POISED",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Parameter ( Path / Query / Header)",
			"item": [
				{
					"name": "GET Booking List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3f7c5c1-74bd-4ade-920b-daace9659bff",
								"exec": [
									"var responseJSON = pm.response.json();",
									"",
									"",
									"pm.test(\"Status is ok\", () => {",
									"    pm.response.to.be.ok;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single existing Booking - JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac9e6d8-4506-4bc5-9212-1f4c43f556d6",
								"exec": [
									"pm.test(\"Plain Get liefert Status OK\", () => {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single special Booking - JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac9e6d8-4506-4bc5-9212-1f4c43f556d6",
								"exec": [
									"pm.test(\"Plain Get liefert Status OK\", () => {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking/12",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Bad Booking ID Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af3b8600-c9e9-4491-90cf-5314f3585db1",
								"exec": [
									"//{{host}}/booking/2*$%&",
									"",
									"pm.test(\"Response Code to be Bad Request\", () => {",
									"    //pm.response.to.have.status(200);",
									"    pm.response.to.be.badRequest;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/booking/*$%&",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"*$%&"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET non existing Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaed2863-fefb-4dec-87ac-d17b3919ff11",
								"exec": [
									"pm.test(\"Status code is 404 Not Found\", function () {",
									"    pm.response.to.be.notFound;",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/booking/999999",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"999999"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteBooking 1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "657a842d-6625-4489-a0d5-46f16eba4a9f",
								"exec": [
									"pm.test(\"Status Code = 201\", () => {",
									"    pm.response.code.to.eql(201);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "46849758-272a-49ec-abfa-bf74e6613923",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token=35daa481b0e2292",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstname\":\"Tom\",\n\t\"lastname\":\"Sawyer\",\n\t\"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Output ( Data, Logs)",
			"item": [
				{
					"name": "GET Booking List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3f7c5c1-74bd-4ade-920b-daace9659bff",
								"exec": [
									"var responseJSON = pm.response.json();",
									"",
									"",
									"pm.test(\"Status is ok\", () => {",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"Body contains Data\", () => {",
									"    pm.response.to.be.withBody;",
									"});",
									"",
									"pm.test(\"Result is an Array\", () => {",
									"    //var responseJSON = pm.response.json();",
									"    pm.expect(responseJSON).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Result is an Array with Length > 0\", () => {",
									"   // var responseJSON = pm.response.json();",
									"    pm.expect(responseJSON).to.be.an('array');",
									"    pm.expect(responseJSON).to.not.have.length(0);",
									"});",
									"",
									"",
									"pm.test(\"All Array Items contain bookingId\",() => {",
									"    for(i=0; i<responseJSON.length; i++){",
									"        pm.expect(responseJSON[i]).to.have.a.property('bookingid');",
									"    }",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET single Booking - XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d76d21f-7ab0-4152-841f-370d10ef251f",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"XML Body contains booking\", () => {",
									"    var jsonObject = xml2Json(responseBody);",
									"    console.log(jsonObject);",
									"    pm.expect(jsonObject).to.have.a.property('booking');",
									"});",
									"",
									"pm.test(\"XML Booking Object contains all necessary fields\", () => {",
									"    var bookingObject = xml2Json(responseBody).booking;",
									"    pm.expect(bookingObject).to.have.a.property('firstname');",
									"    pm.expect(bookingObject).to.have.a.property('lastname');",
									"    pm.expect(bookingObject).to.have.a.property('totalprice');",
									"    pm.expect(bookingObject).to.have.a.property('depositpaid');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{host}}/booking/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "657a842d-6625-4489-a0d5-46f16eba4a9f",
								"exec": [
									"pm.test(\"Status Code = 201\", () => {",
									"    pm.response.code.to.eql(201);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstname\":\"Tom\",\n\t\"lastname\":\"Sawyer\",\n\t\"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "657a842d-6625-4489-a0d5-46f16eba4a9f",
								"exec": [
									"pm.test(\"Status Code = 201\", () => {",
									"    pm.response.code.to.eql(201);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=9aaf5d8782b25c9",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstname\":\"{{randomFirstName}}\",\n\t\"lastname\":\"Sawyer\",\n\t\"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Interoperability (Formats)",
			"item": [
				{
					"name": "GET single Booking - XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d76d21f-7ab0-4152-841f-370d10ef251f",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    //pm.response.to.be.header(\"Content-Type\", \"text/html; charset=utf-8\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/xml; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/booking/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Booking - Date Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "657a842d-6625-4489-a0d5-46f16eba4a9f",
								"exec": [
									"pm.test(\"Status Code = 201\", () => {",
									"    pm.response.code.to.eql(201);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstname\":\"Tom\",\n\t\"lastname\":\"Sawyer\",\n\t\"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"01.08.2018\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Security (Exceptions, Auth)",
			"item": [
				{
					"name": "Delete without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ea61921-3163-441c-85e7-6601c814e68b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.be.forbidden;",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/booking/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3eaa0160-3b2e-4b3b-833a-3005278e59a3",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.be.forbidden;",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4f0d32fe-55e5-4781-a021-2053fe734998",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "Value contains invalid newline characters.",
								"key": "Cookie",
								"value": " token=35daa481b0e2292\n",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": \"{{$randomInt}}\",\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-05-28\",\r\n        \"checkout\": \"2019-09-02\"\r\n    },\r\n    \"additionalneeds\": \"{{$randomProduct}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Errors (Codes, Infotexts)",
			"item": [
				{
					"name": "Post incomplete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "159868ae-970d-4360-85cf-686a6e6ab9ba",
								"exec": [
									"pm.test(\"Status code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Eric\",\r\n    \"lastname\": \"Jones\",\r\n    \"totalprice\": 510,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-10-28\",\r\n        \"checkout\": \"2017-02-19\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT overwrite existiing Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "159868ae-970d-4360-85cf-686a6e6ab9ba",
								"exec": [
									"pm.test(\"Status code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Susan\",\r\n    \"lastname\": \"Smith\",\r\n    \"totalprice\": 852,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-05-28\",\r\n        \"checkout\": \"2019-09-02\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "159868ae-970d-4360-85cf-686a6e6ab9ba",
								"exec": [
									"//A successful response is indicated by any 2xx status code.",
									"",
									"pm.test(\"Status code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"totalprice\": 1852\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/booking/12",
							"host": [
								"{{host}}"
							],
							"path": [
								"booking",
								"12"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dad53d8a-9e1d-4336-82f3-e5c16bd7209a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e0378527-5fac-405d-b401-c20c7eb06e7b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Data (Correctnes, Units, ..)",
			"item": [],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}